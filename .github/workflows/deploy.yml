name: Build, Push and Deploy

on:
  push:
    branches: [main]
  
#  release:
#    types: [created]

env:
  CR_REGISTRY: crppqi6tfv23hnubsg5t
  CR_REPO: demo_app
  IMAGE_TAG: ${{ github.sha }}
  K8S_NAMESPACE: default

jobs:
  build-and-push:
    environment: dev
    runs-on: ubuntu-latest
    steps:
        - uses: actions/checkout@v2

        - name: Yandex Cloud CR "Login" Action for GitHub Actions
          id: login-cr
          uses: yc-actions/yc-cr-login@v3
          with:
            yc-sa-json-credentials: ${{ secrets.YC_SA_KEY }}
        - name: Build, tag, and push image to Yandex Cloud Container Registry
          run: |
            docker build -t cr.yandex/$CR_REGISTRY/$CR_REPO:$IMAGE_TAG .
            docker push cr.yandex/$CR_REGISTRY/$CR_REPO:$IMAGE_TAG
  deploy-to-k8s:
    environment: dev
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4  
      
      - name: Install YC CLI
        run: |
          curl -s https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash
          echo "$HOME/bin" >> $GITHUB_PATH
          echo "$HOME/yandex-cloud/bin" >> $GITHUB_PATH

      - name: Create auth file
        env:
          YC_AUTH_KEY: ${{ secrets.YC_TOKEN }}
          K8S_ID: ${{ secrets.K8S_ID }}
        run: |
          echo $YC_AUTH_KEY > $HOME/authorized_key.json
          yc config profile create sa
          yc config profile activate sa
          yc config set service-account-key $HOME/authorized_key.json
          yc managed-kubernetes cluster get-credentials --id $K8S_ID --external

      - name: Install kubectl
        run: |
          curl -LO https://dl.k8s.io/release/`curl -LS https://dl.k8s.io/release/stable.txt`/bin/linux/amd64/kubectl
          mkdir $HOME/bin
          chmod +x ./kubectl
          mv ./kubectl $HOME/bin/kubectl

    # Обновление образа в кластере
      - name: Deploy
        run: |
          kubectl set image deployment/app-deployment app-demo=cr.yandex/$CR_REGISTRY/$CR_REPO:$IMAGE_TAG
